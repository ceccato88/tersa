import { gateway } from '@/lib/gateway';
import { getReplicateTextModels } from '@/lib/models/text';
import type { ReactNode } from 'react';
import { GatewayProviderClient } from './client';

type GatewayProviderProps = {
  children: ReactNode;
};

export const GatewayProvider = async ({ children }: GatewayProviderProps) => {
  const { models } = await gateway.getAvailableModels();
  const gatewayTextModels = models.filter(
    (model) => !model.name.toLocaleLowerCase().includes('embed')
  );

  // Adicionar modelos Replicate de texto
  const replicateTextModels = getReplicateTextModels().map((model) => ({
    id: model.id,
    name: model.name,
    specification: {
      provider: model.provider,
    },
    pricing: {
      input: '0.001', // Preço padrão por token de entrada
      output: '0.002', // Preço padrão por token de saída
    },
    contextWindow: model.maxTokens || 4096,
    maxOutputTokens: model.maxTokens || 4096,
    supportsStreaming: model.supportsStreaming,
     supportsTools: model.supportsTools,
   }));

  // Combinar modelos do gateway com modelos Replicate
  const allTextModels = [...gatewayTextModels, ...replicateTextModels];

  return (
    <GatewayProviderClient models={allTextModels}>
      {children}
    </GatewayProviderClient>
  );
};